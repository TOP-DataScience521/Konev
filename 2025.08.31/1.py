from numpy import array, dot

# идеальный шестигранный кубик
# 
# M = 1/6 * (1 + 2 + 3 + 4 + 5 + 6) = 3.5
# 
# D = (1 - 3.5)**2 * 1/6 + (2 - 3.5)**2 * 1/6 + ... + (6 - 3.5)**2 * 1/6
X = array([1, 2, 3, 4, 5, 6])
P1 = array([1/6, 1/6, 1/6, 1/6, 1/6, 1/6])
print(f'Задача 1')

M_X_1 = 0
for x, p in zip(X, P1):
    M_X_1 += x*p
print(f' способ1 мат ожидание {M_X_1}')

M_X_2 = sum(x*p for x, p in zip(X, P1))
print(f' способ2 мат ожидание {M_X_2}')

M_X_3 = dot(X, P1)
print(f' способ3 мат ожидание {M_X_3}')


D_X_1 = 0
for x, p in zip(X, P1):
    D_X_1 += (x - M_X_1)**2 * p
print(f' способ1 дисперсия {D_X_1}')

D_X_2 = sum((x - M_X_2)**2 * p for x, p in zip(X, P1))
print(f' способ2 дисперсия {D_X_2}')

D_X_3 = sum((X - M_X_3)**2 * P1)
print(f' способ3 дисперсия {D_X_3}')

# Дисперсия по формуле D(X) = M(X^2) - [M(X)]*[M(X)]
print('Дисперсия по формуле D(X) = M(X^2) - [M(X)]*[M(X)]')

# cпособ1
M_X05_1 = 0
for x, p in zip(X, P1):
    M_X05_1 += (x**2) * p
D_XX_1 = M_X05_1 - M_X_1**2
print(f' способ1 дисперсия (по формуле): {D_XX_1}')

# cпособ2
M_X05_2 = sum((x**2) * p for x, p in zip(X, P1))
D_XX_2 = M_X05_2 - M_X_2**2
print(f' способ2 дисперсия (по формуле): {D_XX_2}')

# cпособ3
M_X05_3 = dot(X**2, P1)
D_XX_3 = M_X05_3 - M_X_3**2
print(f' способ3 дисперсия (по формуле): {D_XX_3}')


print(f'Задача 2')
# шестигранный кубик с повышенной вероятностью выпадения "6"
# 
# M = 1*0.08 + 2*0.08 + 3*0.08 + 4*0.08 + 5*0.08 + 6*0.6 = 4.8
# 
# D = (1 - 4.8)**2 * 0.08 + (2 - 4.8)**2 * 0.08 + ... + (6 - 4.8)**2 * 0.6

Y = array([1, 2, 3, 4, 5, 6])
P2 = array([0.08, 0.08, 0.08, 0.08, 0.08, 0.6])

#способ3
M_Y_3 = dot(Y, P2)

print(f' мат ожидание  {M_Y_3}')


D_Y_3 = sum((Y - M_Y_3)**2 * P2)
print(f' дисперсия  {D_Y_3}')

# Дисперсия по формуле D(X) = M(X^2) - [M(X)]^2
print('Дисперсия по формуле D(X) = M(X^2) - [M(X)]^2')

# cпособ1
M_Y05_1 = 0
for y, p in zip(Y, P2):
    M_Y05_1 += (y**2) * p
D_YY_1 = M_Y05_1 - M_Y_3**2
print(f' способ1 дисперсия  {D_YY_1}')

# cпособ2
M_Y05_2 = sum((y**2) * p for y, p in zip(Y, P2))
D_YY_2 = M_Y05_2 - M_Y_3**2
print(f' способ2 дисперсия {D_YY_2}')

# cпособ3
M_Y05_3 = dot(Y**2, P2)
D_YY_3 = M_Y05_3 - M_Y_3**2
print(f' способ3 дисперсия  {D_YY_3}')

