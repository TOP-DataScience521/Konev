def countable_nouns(number: int, noun: tuple[str, str, str]):
    
    """Функция принимает обязательными аргументами целое число и кортеж с вариантами согласования существительного ).
    
    Первый аргумент должен быть передан в виде объекта int.
    
    Согласно правилам русского языка о согласовании составных количественных числительных и существительных, возможны три варианта согласования. Поэтому кортеж, передаваемый вторым аргументом, должен содержать ровно три объекта str.
        В отличие от списков, элементы кортежа аннотируются каждый по отдельности. Таким образом, кортеж из трёх строк должен быть аннотирован как tuple[str, str, str]

Функция возвращает одно слово из трёх, переданных вторым аргументом, которое согласуется с переданным первым аргументом числом.
    
    параметры:
    number (int): Число, для которого определяется форма существительного.
                
        noun (tuple[str, str, str]): Кортеж из трех форм существительного:
                                     форма для 1 (год)
                                     форма для 2-4 (года)
                                     форма для 5-0 (лет)
    
returns:
        str: Одна из трех форм существительного в зависимости от числа.    
    
    """
    # Определение формы существительного в зависимости от числа
    if (number % 10 == 1) + (number % 100 != 11) == 2:
# год
        return noun[0]  
    elif (number % 10 in [2, 3, 4]) + (number % 100 not in [12, 13, 14]) == 2:
# года
        return noun[1]  
    else:
# лет        
        return noun[2]  
        
# >>> countable_nouns(1, ("год", "года", "лет"))
# 'год'
# >>> countable_nouns(2, ("год", "года", "лет"))
# 'года'
# >>> countable_nouns(10, ("год", "года", "лет"))
# 'лет'
# >>> countable_nouns(12, ("год", "года", "лет"))
# 'лет'
# >>> countable_nouns(22, ("год", "года", "лет"))
# 'года'
# >>> countable_nouns(37, ("год", "года", "лет"))
# 'лет'
# >>>
